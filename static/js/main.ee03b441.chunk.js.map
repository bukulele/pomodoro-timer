{"version":3,"sources":["components/button/button.module.css","components/controlPanel/controlPanel.module.css","components/button/button.js","components/controlPanel/controlPanel.js","components/lengthSetter/lengthSetter.js","components/timer/timer.js","sounds/beep.mp3","index.js","components/lengthSetter/lengthSetter.module.css","components/timer/timer.module.css"],"names":["module","exports","Button","id","children","clickHandler","className","styles","button","onClick","ControlPanel","startStop","reset","controlPanel","icon","faPlay","pointerEvents","faPause","faSyncAlt","LengthSetter","content","counter","manageSessionLength","timerIsRun","event","target","lengthBlock","text","lengthSetter","faChevronUp","contentLength","faChevronDown","Timer","displayTimer","isItSession","timer","timerLabel","timeLeft","App","useState","setDislplayTimer","timerId","setTimerId","setTimerIsRun","setIsItSession","currentTimer","setCurrentTimer","sessionTimer","setSessionTimer","breakTimer","setBreakTimer","audioRef","useRef","includes","stopAudioPlay","current","pause","currentTime","useLayoutEffect","minutes","Math","trunc","seconds","round","play","useEffect","clearInterval","setInterval","prevCurrentTimer","ref","src","metalGearBeep","preload","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee03b441.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3_GL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"controlPanel_controlPanel__1hQ5W\"};","import styles from \"./button.module.css\";\n\nfunction Button({ id, children, clickHandler }) {\n  return (\n    <button id={id} className={styles.button} onClick={clickHandler}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../button/button\";\nimport styles from \"./controlPanel.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ControlPanel({ startStop, reset }) {\n  return (\n    <div className={styles.controlPanel}>\n      <Button id=\"start_stop\" clickHandler={startStop}>\n        <FontAwesomeIcon icon={faPlay} pointerEvents=\"none\" />\n        <span> / </span>\n        <FontAwesomeIcon icon={faPause} pointerEvents=\"none\" />\n      </Button>\n      <Button id=\"reset\" clickHandler={reset}>\n        <FontAwesomeIcon icon={faSyncAlt} pointerEvents=\"none\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default ControlPanel;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"../button/button\";\nimport styles from \"./lengthSetter.module.css\";\n\nfunction LengthSetter({ content, counter, manageSessionLength, timerIsRun }) {\n  const clickHandler = (event) => {\n    if (!timerIsRun) manageSessionLength(event.target.id, content);\n  };\n  return (\n    <div className={styles.lengthBlock}>\n      <p id={`${content}-label`} className={styles.text}>\n        {`${content} length`}\n      </p>\n      <div className={styles.lengthSetter}>\n        <Button id={`${content}-increment`} clickHandler={clickHandler}>\n          <FontAwesomeIcon icon={faChevronUp} pointerEvents=\"none\" />\n        </Button>\n        <div id={`${content}-length`} className={styles.contentLength}>\n          {counter}\n        </div>\n        <Button id={`${content}-decrement`} clickHandler={clickHandler}>\n          <FontAwesomeIcon icon={faChevronDown} pointerEvents=\"none\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default LengthSetter;\n","import styles from \"./timer.module.css\";\n\nfunction Timer({ displayTimer, isItSession }) {\n  return (\n    <div className={styles.timer}>\n      <h2 id=\"timer-label\" className={styles.timerLabel}>\n        {isItSession ? \"Session\" : \"Break\"}\n      </h2>\n      <div id=\"time-left\" className={styles.timeLeft}>\n        {displayTimer}\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","export default __webpack_public_path__ + \"static/media/beep.312b9a87.mp3\";","import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ControlPanel from \"./components/controlPanel/controlPanel\";\nimport LengthSetter from \"./components/lengthSetter/lengthSetter\";\nimport Timer from \"./components/timer/timer\";\nimport \"./index.css\";\nimport metalGearBeep from \"./sounds/beep.mp3\";\n\nfunction App() {\n  const [displayTimer, setDislplayTimer] = useState(\"25:00\");\n  const [timerId, setTimerId] = useState(null);\n  const [timerIsRun, setTimerIsRun] = useState(false);\n  const [isItSession, setIsItSession] = useState(true);\n  const [currentTimer, setCurrentTimer] = useState(25 * 60);\n  const [sessionTimer, setSessionTimer] = useState(25 * 60);\n  const [breakTimer, setBreakTimer] = useState(5 * 60);\n\n  const audioRef = useRef();\n\n  // let i = 1;\n\n  const manageSessionLength = (id, content) => {\n    if (content === \"session\") {\n      setSessionTimer(() => {\n        if (id.includes(\"increment\")) {\n          if (sessionTimer <= 60 * 59) {\n            return sessionTimer + 60;\n          } else {\n            return sessionTimer;\n          }\n        } else {\n          if (sessionTimer >= 60 * 2) {\n            return sessionTimer - 60;\n          } else {\n            return sessionTimer;\n          }\n        }\n      });\n    } else {\n      setBreakTimer(() => {\n        if (id.includes(\"increment\")) {\n          if (breakTimer <= 60 * 59) {\n            return breakTimer + 60;\n          } else {\n            return breakTimer;\n          }\n        } else {\n          if (breakTimer >= 60 * 2) {\n            return breakTimer - 60;\n          } else {\n            return breakTimer;\n          }\n        }\n      });\n    }\n  };\n\n  const startStop = () => {\n    stopAudioPlay();\n    setTimerIsRun(!timerIsRun);\n    if (!timerIsRun) {\n      // let now = new Date();\n      setTimerId(() =>\n        setInterval(() => {\n          setCurrentTimer((prevCurrentTimer) => {\n            return prevCurrentTimer - 1;\n          });\n        }, 1000)\n      );\n    } else {\n      clearInterval(timerId);\n      setTimerId(null);\n    }\n  };\n\n  // The following code helps to reduce time error but in this case it is impossible to pass the test on FreeCodeCamp\n  //anyway I leave it here\n\n  // const runningTimer = (initialTime) => {\n  //   let currentTime = new Date();\n  //   let difference = (currentTime - initialTime) / 1000;\n  //   if (difference >= i) {\n  //     setCurrentTimer((prevCurrentTimer) => {\n  //       return prevCurrentTimer - 1;\n  //     });\n  //     i++;\n  //   }\n  // };\n\n  const reset = () => {\n    stopAudioPlay();\n    clearInterval(timerId);\n    setTimerId(null);\n    setTimerIsRun(false);\n    setIsItSession(true);\n    setDislplayTimer(\"25:00\");\n    setCurrentTimer(25 * 60);\n    setSessionTimer(25 * 60);\n    setBreakTimer(5 * 60);\n    // i = 1;\n  };\n\n  const stopAudioPlay = () => {\n    audioRef.current.pause();\n    audioRef.current.currentTime = 0;\n  };\n\n  useLayoutEffect(() => {\n    let minutes = Math.trunc(currentTimer / 60);\n    let seconds = Math.round((currentTimer / 60 - minutes) * 60);\n    if (currentTimer > 0) {\n      setDislplayTimer(\n        `${minutes < 10 ? \"0\" + minutes : minutes}:${\n          seconds < 10 ? \"0\" + seconds : seconds\n        }`\n      );\n    } else if (currentTimer === 0) {\n      setDislplayTimer(\"00:00\");\n      setIsItSession(!isItSession);\n    } else if (currentTimer < 0) {\n      audioRef.current.play();\n      setCurrentTimer(isItSession ? sessionTimer : breakTimer);\n    }\n  }, [currentTimer]);\n\n  useEffect(() => {\n    if (isItSession) {\n      setCurrentTimer(sessionTimer);\n    }\n  }, [sessionTimer]);\n\n  useEffect(() => {\n    if (!isItSession) {\n      setCurrentTimer(breakTimer);\n    }\n  }, [breakTimer]);\n\n  return (\n    <div className=\"container\">\n      <h1>25 + 5 Clock</h1>\n      <Timer displayTimer={displayTimer} isItSession={isItSession} />\n      <ControlPanel startStop={startStop} reset={reset} />\n      <div className=\"lengthSetters\">\n        <LengthSetter\n          content=\"break\"\n          counter={breakTimer / 60}\n          manageSessionLength={manageSessionLength}\n          timerIsRun={timerIsRun}\n        />\n        <LengthSetter\n          content=\"session\"\n          counter={sessionTimer / 60}\n          manageSessionLength={manageSessionLength}\n          timerIsRun={timerIsRun}\n        />\n      </div>\n      <audio\n        ref={audioRef}\n        id=\"beep\"\n        src={metalGearBeep}\n        preload=\"true\"\n        type=\"audio/mpeg\"\n      ></audio>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lengthBlock\":\"lengthSetter_lengthBlock__2AdSH\",\"lengthSetter\":\"lengthSetter_lengthSetter__37V0B\",\"contentLength\":\"lengthSetter_contentLength__2PeBF\",\"text\":\"lengthSetter_text__1PX_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"timer_timer__2oXym\",\"timerLabel\":\"timer_timerLabel__37LpL\",\"timeLeft\":\"timer_timeLeft__2qpEy\"};"],"sourceRoot":""}